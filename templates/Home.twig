{% extends "@Tsugi/Page.twig" %}

{% block head %}
    {% for style in styles %}
        <link rel="stylesheet" type="text/css" href="{{style}}"/>
    {% endfor %}
    <script type="text/javascript">
        Array.prototype.sum = function (prop) {
            var total = 0
            for ( var i = 0, _len = this.length; i < _len; i++ ) {
                total += parseInt(this[i][prop]);
            }
            return total;
        }
        function formatNumber(num) {
            if (isNaN(num)) {
                return '';
            }
            return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1 ')
        }
    </script>
{% endblock %}

{% block content %}
{% if app.tsugi.user.instructor %}
    <div id="graph_container">
        <div id="title" data-url="{{downloadUrl}}">
            <h4>Course Analytics</h4>
        </div>
        <section id="graphs" class="result_container"></section>
        <div id="last">&nbsp;</div>
    </div>
{% else %}
    <h4 style="color:#444">Course analytics are available to site owners and lecturers.</h4>
{% endif %}
{% endblock %}

{% block footer %}
{% if app.tsugi.user.instructor %}
    {% for script in scripts %}
        <script src="{{script}}" type="text/javascript"></script>
    {% endfor %}
    <script>

    var data = [];

    function getWeekData (no, no_students, w) {
        var result = {
                title: 'Week '+ no +' Activity'
                ,st: w.start
                ,ed: w.end
                ,showdate: true
                ,no_students: no_students
                ,list: [{"t": "No data yet", "c": "empty", "v": no_students}]
            };

        if ('list' in w) {
            if (w.list.length > 0) {
                if (new Date() >= new Date(w.start)) {
                    var r = w.list.length;
                    result['list'] = [];
                    if (new Date() < new Date(w.active)) {
                        result['list'].push({"t": "Logged in to Vula", "c": "blue", "v": r});
                    } else {
                        result['list'].push({"t": "Active engagement in 2 or more course sites over 2 or more days", "c": "green", "v": w.list.filter((i) => i.val == "GREEN").length});
                        result['list'].push({"t": "Logged in to Vula but limited or no activity, and/or accessed Vula only from a smartphone", "c": "orange", "v": w.list.filter((i) => i.val == "ORANGE").length});
                    }
                    result['list'].push({"t": "Has not logged in", "c": (new Date() < new Date(w.end) ? "gray" : "red"), "v": no_students - r});
                }
            }
        } 
        return result;  
    }

    $(function() {

        var error_count = 0,
            showState = function(_state, instant, err) {
                _state = _state || 0;
                instant = instant || false;
                console.log(err);
                if (instant) {
                    $("#graphs").html(tmpl('tmpl-state', {state: _state, err: err, c: error_count, svg: '{{loader_svg}}'}));
                } else {
                    if ($('#state:visible').length) {
                        $('#state').fadeOut(350, function() {
                        showState(_state, instant, err);
                        });
                    } else {
                        $("#graphs").hide().html(tmpl('tmpl-state', {state: _state,  err: err, c: error_count, svg: '{{loader_svg}}'})).fadeIn(300);
                    }
                }
            },
            getNewestDate = function (d) {
                if (d) {
                    return d.length > 0 ? new Date(Math.max.apply(null, d.map(function(e) { return new Date(e.updated); }))) : ''; 
                }
                return '';
            },
            init = function() {
                showState(0, true);
                $.get('{{getUrl}}', function(_data) {
                    data = _data;
                    _data['download'] = $('#title').data('url');
                    $('#title').html(tmpl('tmpl-link', _data));

                    if (_data.success == "1") {
                        var orientation_updated = getNewestDate(_data.orientation), 
                            o_activity_updated = getNewestDate(_data.orientation_activity),
                            survey_updated = getNewestDate(_data.survey),
                            show_login = false;

                        var updated = new Date(Math.max(orientation_updated, o_activity_updated, survey_updated));

                        $.each( Object.keys(_data).filter((i) => i.indexOf('week') >= 0), function(i, w) {
                            var d = _data[w],
                                l = typeof(d.list) !== 'undefined' ? (d.list.length > 0) : false;
                            if (!show_login) {
                                show_login = ((new Date() >= new Date(d.start)) && (new Date() <= new Date(d.active))) && l;    
                            }
                            if (l) {
                                updated = new Date(Math.max(updated, getNewestDate(d.list)));
                            }
                        });    

                        $("#last").html(tmpl('tmpl-last-saved', {'students': _data.no_students, 
                                                                'updated' : updated, 
                                                                'show_login': show_login, 
                                                                'start_date': _data.start_date,
                                                                'end_date': _data.end_date }));

                        $("#graphs").html(tmpl('tmpl-graphs', _data));
                        $('.tt').tooltipster({ theme: 'tooltipster-borderless', maxWidth: 300, distance: 0, animationDuration: 200, animation: 'grow'});
                    } else {
                        $("#last").html(tmpl('tmpl-last-saved', {'students': 'NA', 'updated' : '' }))
                        showState(1, false, _data['err']);
                    }
                }).fail(function() {
                    showState(2);
                });
            };

        $("#graphs").on("click","#state a.reload", function(event) {
            event.preventDefault();
            error_count ++;
            init();
        });

        init();
    });
    </script>
    {{ source('tmpl.html', ignore_missing = true) }}
{% endif %}
{% endblock %}
